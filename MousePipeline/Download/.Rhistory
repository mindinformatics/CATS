GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir="~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/")
if(length(GEOobject)==1){
GEOobject = GEOobject[[1]]
}
AddDatasetEntry(GEOobject, GEOtag)
return(GEOobject)
}
AddDatasetEntry = function(GEOobject, GEOtag) {
# Name, StudyLab, DataType, GEO, SampleSize, BrainRegion, Peturbations, TimeCourse, DataLinks
# Species, Cell Type, OtherTissues, PubMedID, Description
StudyLab = expinfo(experimentData(GEOobject))[['lab']]
DataType = "" # every GPL needs to map to microarray or RNAseq
SampleSize = length(sampleNames(phenoData(GEOobject)))
BrainRegion = paste(levels(pData(phenoData(GEOobject))$source_name_ch1), collapse = "//")
Peturbations = ""
TimeCourse = ""
DataLinks = ""
Species = paste(levels(pData(phenoData(GEOobject))$organism_ch1), sep=" ", collapse = "//")
CellType = ""
OtherTissues = ""
PubMedID = pubMedIds(experimentData(GEOobject))
Platform = annotation(GEOobject)
Description = ""
Name = paste(GEOtag, StudyLab, sep = " ")
Append = c(Name, StudyLab, DataType,GEOtag, SampleSize, BrainRegion,
Peturbations, TimeCourse, DataLinks,
Species, CellType, OtherTissues, PubMedID, Platform, Description)
Dataset = read.csv("~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/Datasets.csv",
header =T)
if(GEOtag %in% Dataset$GEO){break}
else{
Dataset[nrow(Dataset)+1, ] = Append
write.csv(Dataset, "~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/Datasets.csv",
row.names = F, col.names = T)
}
}
DownloadFunction = function(GEOtag){
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir="~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/")
if(length(GEOobject)==1){
GEOobject = GEOobject[[1]]
}
AddDatasetEntry(GEOobject, GEOtag)
return(GEOobject)
}
AddDatasetEntry = function(GEOobject, GEOtag) {
# Name, StudyLab, DataType, GEO, SampleSize, BrainRegion, Peturbations, TimeCourse, DataLinks
# Species, Cell Type, OtherTissues, PubMedID, Description
StudyLab = expinfo(experimentData(GEOobject))[['lab']]
DataType = "" # every GPL needs to map to microarray or RNAseq
SampleSize = length(sampleNames(phenoData(GEOobject)))
BrainRegion = paste(levels(pData(phenoData(GEOobject))$source_name_ch1), collapse = "//")
Peturbations = ""
TimeCourse = ""
DataLinks = ""
Species = paste(levels(pData(phenoData(GEOobject))$organism_ch1), sep=" ", collapse = "//")
CellType = ""
OtherTissues = ""
PubMedID = pubMedIds(experimentData(GEOobject))
Platform = annotation(GEOobject)
Description = ""
Name = paste(GEOtag, StudyLab, sep = " ")
Append = c(Name, StudyLab, DataType,GEOtag, SampleSize, BrainRegion,
Peturbations, TimeCourse, DataLinks,
Species, CellType, OtherTissues, PubMedID, Platform, Description)
Dataset = read.csv("~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/Datasets.csv",
header =T)
if(GEOtag %in% Dataset$GEO){break}
else{
Dataset[nrow(Dataset)+1, ] = Append
write.csv(Dataset, "~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/Datasets.csv",
row.names = F, col.names = T)
}
}
CaseControl = function(GEOobject){
Comparisons<-pData(phenoData(GEOobject))$`genotype/variation`
APLP2ko_WT = ifelse(Comparisons=="APLP2 knockout", 1, ifelse(Comparisons=="wild type", 0, NA))
APPko_WT = ifelse(Comparisons=="APP knockout", 1, ifelse(Comparisons=="wild type", 0, NA))
APPsaki_WT = ifelse(Comparisons=="APPsa knockin", 1, ifelse(Comparisons=="wild type", 0, NA))
return(data.frame(cbind(APLP2ko_WT, APPko_WT, APPsaki_WT)))
}
Aydin = DownloadFunction("GSE25926")
source('~/Desktop/MousePipeline/Code/Download.R')
Aydin = DownloadFunction("GSE25926")
warnings()
source('~/Desktop/MousePipeline/Code/Download.R')
Aydin = DownloadFunction("GSE25926")
source('~/Desktop/MousePipeline/Code/Download.R')
Aydin = DownloadFunction("GSE25926")
?getGEO
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/MousePipeline/Download/"
)
GEOtag="GSE25926"
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/MousePipeline/Download/"
)
if(length(GEOobject)==1){
GEOobject = GEOobject[[1]]
}
AddDatasetEntry(GEOobject, GEOtag)
source('~/Desktop/MousePipeline/Code/Download.R')
GEOtag="GSE25926"
Aydin = DownloadFunction("GSE25926")
source('~/Desktop/MousePipeline/Code/Download.R')
Aydin = DownloadFunction("GSE25926")
Tsai = DownloadFunction("GSE65159")
Tsai
Tsai = DownloadFunction("GSE65159")
Tsai
Tsai
exprs(Tsai)
exprs(Aydin)
Tsai = DownloadFunction("GSE65159")
Tsai
setwd('~/Desktop/MousePipeline/Code/Download.R')
setwd('~/Desktop/MousePipeline/Download/')
system(command = "./remove.sh")
Bares = DownloadFunction("GSE9566")
warnings()
DownloadFunction = function(GEOtag){
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/MousePipeline/Download/"
)
#"~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/")
#if(length(GEOobject!=1){
GEOobject = GEOobject[[1]]
#}
AddDatasetEntry(GEOobject, GEOtag)
return(GEOobject)
}
Bares = DownloadFunction("GSE9566")
Bares
Bares = DownloadFunction("GSE9566")
DownloadFunction = function(GEOtag){
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/MousePipeline/Download/"
)
#"~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/")
#if(length(GEOobject!=1){
#GEOobject = GEOobject[[1]]
#}
AddDatasetEntry(GEOobject, GEOtag)
return(GEOobject)
}
Bares = DownloadFunction("GSE9566")
GEOtag = "GSE9566"
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/MousePipeline/Download/"
)
warnings()
Bares
GEOobject
plat1 = sampleNames(phenoData(GEOobject$`GSE9566-GPL1261_series_matrix.txt.gz`))
plat2 = sampleNames(phenoData(GEOobject$`GSE9566-GPL6096_series_matrix.txt.gz`))
table(plat1 %in% plat2)
plat1
plat2
table(plat2 %in% plat1)
?lapply
lapply(X = GEOobject, FUN = function(x) AddDatasetEntry(x,GEOtag))
GEOtag = "GSE9566"
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/MousePipeline/Download/"
)
warnings()
lapply(X = GEOobject, FUN = function(x) AddDatasetEntry(x,GEOtag))
AddDatasetEntry = function(GEOobject, GEOtag) {
# Name, StudyLab, DataType, GEO, SampleSize, BrainRegion, Peturbations, TimeCourse, DataLinks
# Species, Cell Type, OtherTissues, PubMedID, Description
StudyLab = expinfo(experimentData(GEOobject))[['lab']]
DataType = "" # every GPL needs to map to microarray or RNAseq
SampleSize = length(sampleNames(phenoData(GEOobject)))
BrainRegion = paste(levels(pData(phenoData(GEOobject))$source_name_ch1), collapse = "//")
Peturbations = ""
TimeCourse = ""
DataLinks = ""
Species = paste(levels(pData(phenoData(GEOobject))$organism_ch1), sep=" ", collapse = "//")
CellType = ""
OtherTissues = ""
PubMedID = pubMedIds(experimentData(GEOobject))
Platform = annotation(GEOobject)
Description = ""
Name = paste(GEOtag, StudyLab, sep = " ")
Append = c(Name, StudyLab, DataType,GEOtag, SampleSize, BrainRegion,
Peturbations, TimeCourse, DataLinks,
Species, CellType, OtherTissues, PubMedID, Platform, Description)
#"~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/Datasets.csv",
Dataset = read.csv("~/Desktop/MousePipeline/Download/Datasets.csv",
header =T)
# if(GEOtag %in% Dataset$GEO){}
# have multipule datasets per GEO, deserve their own ID?
Dataset[nrow(Dataset)+1, ] = Append
write.csv(Dataset,"~/Desktop/MousePipeline/Download/Datasets.csv",
row.names = F)
}
lapply(X = GEOobject, FUN = function(x) AddDatasetEntry(x,GEOtag))
DownloadFirstElement = function(GEOtag) {
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/CATS/MousePipeline/Download/")
if (length(GEOobject!=1) {
GEOobject = GEOobject[[1]]
}
}
DownloadFunction = function(GEOtag){
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/MousePipeline/Download/"
)
#"~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/")
#Cant ignore multipule platforms for multipule
if(length(GEOobject!=1){
GEOobject = GEOobject[[1]]
}
lapply(X = GEOobject, FUN = function(x) AddDatasetEntry(x,GEOtag))
AddDatasetEntry(GEOobject, GEOtag)
return(GEOobject)
}
AddDatasetEntry = function(GEOobject, GEOtag) {
# Name, StudyLab, DataType, GEO, SampleSize, BrainRegion, Peturbations, TimeCourse, DataLinks
# Species, Cell Type, OtherTissues, PubMedID, Description
StudyLab = expinfo(experimentData(GEOobject))[['lab']]
DataType = "" # every GPL needs to map to microarray or RNAseq
SampleSize = length(sampleNames(phenoData(GEOobject)))
BrainRegion = paste(levels(pData(phenoData(GEOobject))$source_name_ch1), collapse = "//")
Peturbations = ""
TimeCourse = ""
DataLinks = ""
Species = paste(levels(pData(phenoData(GEOobject))$organism_ch1), sep=" ", collapse = "//")
CellType = ""
OtherTissues = ""
PubMedID = pubMedIds(experimentData(GEOobject))
Platform = annotation(GEOobject)
Description = ""
Name = paste(GEOtag, StudyLab, sep = " ")
Append = c(Name, StudyLab, DataType,GEOtag, SampleSize, BrainRegion,
Peturbations, TimeCourse, DataLinks,
Species, CellType, OtherTissues, PubMedID, Platform, Description)
#"~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/Datasets.csv",
Dataset = read.csv("~/Desktop/MousePipeline/Download/Datasets.csv",
header =T)
# if(GEOtag %in% Dataset$GEO){}
# have multipule datasets per GEO, deserve their own ID?
Dataset[nrow(Dataset)+1, ] = Append
write.csv(Dataset,"~/Desktop/MousePipeline/Download/Datasets.csv",
row.names = F)
}
DownloadFirstElement = function(GEOtag) {
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/CATS/MousePipeline/Download/")
if (length(GEOobject!=1) {
GEOobject = GEOobject[[1]]
}
}
DownloadFunction = function(GEOtag) {
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/MousePipeline/Download/"
)
#"~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/")
#Cant ignore multipule platforms for multipule
if (length(GEOobject!=1) {
GEOobject = GEOobject[[1]]
}
lapply(X = GEOobject, FUN = function(x) AddDatasetEntry(x,GEOtag))
AddDatasetEntry(GEOobject, GEOtag)
return(GEOobject)
}
AddDatasetEntry = function(GEOobject, GEOtag) {
# Name, StudyLab, DataType, GEO, SampleSize, BrainRegion, Peturbations, TimeCourse, DataLinks
# Species, Cell Type, OtherTissues, PubMedID, Description
StudyLab = expinfo(experimentData(GEOobject))[['lab']]
DataType = "" # every GPL needs to map to microarray or RNAseq
SampleSize = length(sampleNames(phenoData(GEOobject)))
BrainRegion = paste(levels(pData(phenoData(GEOobject))$source_name_ch1), collapse = "//")
Peturbations = ""
TimeCourse = ""
DataLinks = ""
Species = paste(levels(pData(phenoData(GEOobject))$organism_ch1), sep=" ", collapse = "//")
CellType = ""
OtherTissues = ""
PubMedID = pubMedIds(experimentData(GEOobject))
Platform = annotation(GEOobject)
Description = ""
Name = paste(GEOtag, StudyLab, sep = " ")
Append = c(Name, StudyLab, DataType,GEOtag, SampleSize, BrainRegion,
Peturbations, TimeCourse, DataLinks,
Species, CellType, OtherTissues, PubMedID, Platform, Description)
#"~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/Datasets.csv",
Dataset = read.csv("~/Desktop/MousePipeline/Download/Datasets.csv",
header =T)
# if(GEOtag %in% Dataset$GEO){}
# have multipule datasets per GEO, deserve their own ID?
Dataset[nrow(Dataset)+1, ] = Append
write.csv(Dataset,"~/Desktop/MousePipeline/Download/Datasets.csv",
row.names = F)
}
DownloadFirstElement = function(GEOtag) {
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/CATS/MousePipeline/Download/")
if(length(GEOobject)!=1){GEOobject = GEOobject[[1]]}
AddDatasetEntry(GEOobject, GEOtag)
return(GEOobject)
}
CaseControl = function(GEOobject){
Comparisons<-pData(phenoData(GEOobject))$`genotype/variation`
APLP2ko_WT = ifelse(Comparisons=="APLP2 knockout", 1, ifelse(Comparisons=="wild type", 0, NA))
APPko_WT = ifelse(Comparisons=="APP knockout", 1, ifelse(Comparisons=="wild type", 0, NA))
APPsaki_WT = ifelse(Comparisons=="APPsa knockin", 1, ifelse(Comparisons=="wild type", 0, NA))
return(data.frame(cbind(APLP2ko_WT, APPko_WT, APPsaki_WT)))
}
Aydin = DownloadFirstElement("GSE25926")
warnings()
GEOtag= "GSE25926"
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/CATS/MousePipeline/Download/")
GEOobject
GEOobject = GEOobject[[1]]
AddDatasetEntry(GEOobject, GEOtag)
AddDatasetEntry = function(GEOobject, GEOtag) {
# Name, StudyLab, DataType, GEO, SampleSize, BrainRegion, Peturbations, TimeCourse, DataLinks
# Species, Cell Type, OtherTissues, PubMedID, Description
StudyLab = expinfo(experimentData(GEOobject))[['lab']]
DataType = "" # every GPL needs to map to microarray or RNAseq
SampleSize = length(sampleNames(phenoData(GEOobject)))
BrainRegion = paste(levels(pData(phenoData(GEOobject))$source_name_ch1), collapse = "//")
Peturbations = ""
TimeCourse = ""
DataLinks = ""
Species = paste(levels(pData(phenoData(GEOobject))$organism_ch1), sep=" ", collapse = "//")
CellType = ""
OtherTissues = ""
PubMedID = pubMedIds(experimentData(GEOobject))
Platform = annotation(GEOobject)
Description = ""
Name = paste(GEOtag, StudyLab, sep = " ")
Append = c(Name, StudyLab, DataType,GEOtag, SampleSize, BrainRegion,
Peturbations, TimeCourse, DataLinks,
Species, CellType, OtherTissues, PubMedID, Platform, Description)
#"~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/Datasets.csv",
Dataset = read.csv(path,
header =T)
# if(GEOtag %in% Dataset$GEO){}
# have multipule datasets per GEO, deserve their own ID?
Dataset[nrow(Dataset)+1, ] = Append
write.csv(Dataset,path,
row.names = F)
}
source('~/Desktop/CATS/MousePipeline/Code/Download.R')
system(command = "./remove.sh")
AddDatasetEntry(GEOobject, GEOtag)
DownloadFirstElement = function(GEOtag) {
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Desktop/CATS/MousePipeline/Download/")
GEOobject = GEOobject[[1]]
AddDatasetEntry(GEOobject, GEOtag)
return(GEOobject)
}
AddDatasetEntry = function(GEOobject, GEOtag) {
# Name, StudyLab, DataType, GEO, SampleSize, BrainRegion, Peturbations, TimeCourse, DataLinks
# Species, Cell Type, OtherTissues, PubMedID, Description
StudyLab = expinfo(experimentData(GEOobject))[['lab']]
DataType = "" # every GPL needs to map to microarray or RNAseq
SampleSize = length(sampleNames(phenoData(GEOobject)))
BrainRegion = paste(levels(pData(phenoData(GEOobject))$source_name_ch1), collapse = "//")
Peturbations = ""
TimeCourse = ""
DataLinks = ""
Species = paste(levels(pData(phenoData(GEOobject))$organism_ch1), sep=" ", collapse = "//")
CellType = ""
OtherTissues = ""
PubMedID = pubMedIds(experimentData(GEOobject))
Platform = annotation(GEOobject)
Description = ""
Name = paste(GEOtag, StudyLab, sep = " ")
Append = c(Name, StudyLab, DataType,GEOtag, SampleSize, BrainRegion,
Peturbations, TimeCourse, DataLinks,
Species, CellType, OtherTissues, PubMedID, Platform, Description)
#"~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Datasets/Datasets.csv",
Dataset = read.csv(path,
header =T)
# if(GEOtag %in% Dataset$GEO){}
# have multipule datasets per GEO, deserve their own ID?
Dataset[nrow(Dataset)+1, ] = Append
write.csv(Dataset,path,
row.names = F)
}
source('~/Desktop/CATS/MousePipeline/Code/Download.R')
Aydin = DownloadFirstElement("GSE25926")
GEOtag="GSE9566"
source('~/Desktop/MousePipeline/Code/Download.R')
dat = DownloadFirstElement("GSE9566")
dat
phenoData(dat)
pData(phenoData(dat))
View(pData(phenoData(dat)))
gset <- getGEO("GSE73771", GSEMatrix =TRUE, AnnotGPL=TRUE)
if (length(gset) > 1) idx <- grep("GPL6246", attr(gset, "names")) else idx <- 1
idx
gset <- gset[[idx]]
fvarLabels(gset)
fvarLabels(dat)
fvarLabels(gset) <- make.names(fvarLabels(gset))
fvarLabels(gset)
?getGEO
View(exprs(dat))
pData(phenoData(dat))$`data_processing`[1]
summary(exprs(dat)[1,])
titles = pData(phenoData(dat))
titles
titles = pData(phenoData(dat))$title
titles
defFactors<-function(title){
#filter into different categories p indicates the post-natal days
#Astro's P7-P8
index<-grep(x=title,pattern="Astros P[1-8] ")
tempvec<-rep(0, length(title))
tempvec[index]<-1
myFactors<-data.frame(factor(tempvec))
names(myFactors)<-"AstroP7"
#Astro's P17
index<-grep(x=title, pattern="Astros P[1][7] |Astros P[3][0]")
tempvec<-rep(0, length(title))
tempvec[index]<-1
myFactors$AstroP17<-factor(tempvec)
#Astro's P17-grey matter (P17g)
index<-grep(x=title,pattern="Astros P17g ")
tempvec<-rep(0, length(title))
tempvec[index]<-1
myFactors$AstroP17g<-factor(tempvec)
#Neurons P7
index<-grep(x=title,pattern="Neurons P[0-7] ")
tempvec<-rep(0, length(title))
tempvec[index]<-1
myFactors$NeuronsP7 <-factor(tempvec)
# Neurons P17
index<-grep(x=title,pattern="Neurons P[1-3][0-9] ")
tempvec<-rep(0, length(title))
tempvec[index]<-1
myFactors$NeuronsP17<-factor(tempvec)
# Neurons endothelial cell depleted P7n P17n
index<-grep(x=title,pattern="Neurons P[0-9][0-9]n ")
tempvec<-rep(0, length(title))
tempvec[index]<-1
myFactors$NeuronsP7n<-factor(tempvec)
# OPC's
index<-grep(x=title,pattern="OPCs")
tempvec<-rep(0, length(title))
tempvec[index]<-1
myFactors$OPCs<-factor(tempvec)
# GalC-OL's
#  galactocerebroside (GalC) first Oligodendrocyte specific marker to be expressed
index<-grep(x=title,pattern="OLs.*GC_[a-z]")
tempvec<-rep(0, length(title))
tempvec[index]<-1
myFactors$GalCOLs<-factor(tempvec)
#MOG-OL's
# MOG is a marker for mature Oligodendrocytes
index<-grep(x=title,pattern="Myelin OLs.*MOG_[a-z]")
tempvec<-rep(0, length(title))
tempvec[index]<-1
myFactors$MOGOLs<-factor(tempvec)
return(myFactors)
}
Exprs1.factors<-defFactors(as.vector(titles))
View(Exprs1.factors)
Astros<-ifelse(Exprs1.factors$AstroP7==1|Exprs1.factors$AstroP17==1|Exprs1.factors$AstroP17g==1, 1, 0)
Neurons<-ifelse(Exprs1.factors$NeuronsP7==1|Exprs1.factors$NeuronsP17==1|Exprs1.factors$NeuronsP7n==1, 1, 0)
OLs<-ifelse(Exprs1.factors$OPCs==1|Exprs1.factors$MOGOLs==1|Exprs1.factors$GalCOLs==1, 1, 0)
Astros
model.matrix(~Astros)
sml = Astros
sel <- which(sml != "X")
sml <- sml[sel]
sml
source('~/Desktop/CATS/MousePipeline/Code/CaseControl.R')
CClist = CaseControl(Astros, dat)
CClist
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Download/")
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Downloads")
source('~/Desktop/CATS/MousePipeline/Code/Download.R')
source('~/Desktop/CATS/MousePipeline/Code/CaseControl.R')
dat = DownloadFirstElement("GSE9566")
dat = DownloadFirstElement("GSE9566")
dat = DownloadFirstElement("GSE9566")
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Downloads")
GEOtag
DownloadFirstElement = function(GEOtag) {
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Downloads")
GEOobject = GEOobject[[1]]
#AddDatasetEntry(GEOobject, GEOtag)
# may copy
#log2 transform
return(GEOobject)
}
GEOobject<-getGEO(GEO=GEOtag, GSEMatrix=T, AnnotGPL=T,
destdir= "~/Dropbox (Partners HealthCare)/MSBB/Mouse 2.0/Downloads")
warnings()
exprs(GEOobject)
exprs(GEOobject$`GSE9566-GPL1261_series_matrix.txt.gz`)
summary(exprs(GEOobject)[,2])
GEOobject = GEOobject[[1]]
summary(exprs(GEOobject)[,2])
range(exprs(GEOobject)[,2])
library(samr)
samfit = SAM(exprs(dat), y=Astros, resp.type = "Two class unpaired")
Astros<-ifelse(Exprs1.factors$AstroP7==1|Exprs1.factors$AstroP17==1|Exprs1.factors$AstroP17g==1, 1, 2)
samfit = SAM(exprs(dat), y=Astros, resp.type = "Two class unpaired")
samfit$samr.obj
