rownames(eset.m)<-GeneNames$gene_symbol
GeneSums<-apply(X = eset.m, MARGIN = 1, median)
index<- as.numeric(row.names(design))
GeneNames<-eset[,1]
subset<-eset[,-1]
subset2<-subset[,index, with=F]
eset.m<-data.matrix(subset2)
rownames(eset.m)<-GeneNames$gene_symbol
#log2 transform data
eset.m[eset.m<1]<-1
eset.m<-log2(eset.m)
GeneMed<-apply(X = eset.m, MARGIN = 1, median)
GeneSum<-apply(X = eset.m, MARGIN = 1, sum)
eset.m<-eset.m[GeneSums!=0,]
View(eset.m)
boxplot(eset.m[,1:10])
index<- as.numeric(row.names(design))
GeneNames<-eset[,1]
subset<-eset[,-1]
subset2<-subset[,index, with=F]
eset.m<-data.matrix(subset2)
rownames(eset.m)<-GeneNames$gene_symbol
#log2 transform data
eset.m[eset.m<1]<-1
eset.m<-log2(eset.m)
GeneMed<-apply(X = eset.m, MARGIN = 1, median)
GeneSum<-apply(X = eset.m, MARGIN = 1, sum)
eset.m<-eset.m[GeneMed!=0,]
boxplot(eset.m[,1:10])
dim(eset.m)
boxplot(eset.m[,10:30])
boxplot(eset.m[,1:90])
boxplot(eset.m[,1:45])
2^5
index<- as.numeric(row.names(design))
GeneNames<-eset[,1]
subset<-eset[,-1]
subset2<-subset[,index, with=F]
eset.m<-data.matrix(subset2)
rownames(eset.m)<-GeneNames$gene_symbol
#log2 transform data
eset.m[eset.m<1]<-1
eset.m<-log2(eset.m)
GeneMed<-apply(X = eset.m, MARGIN = 1, median)
GeneSum<-apply(X = eset.m, MARGIN = 1, sum)
eset.m<-eset.m[GeneMed<4,]
boxplot(eset.m[,1:45])
boxplot(eset.m[,1:45])
index<- as.numeric(row.names(design))
GeneNames<-eset[,1]
subset<-eset[,-1]
subset2<-subset[,index, with=F]
eset.m<-data.matrix(subset2)
rownames(eset.m)<-GeneNames$gene_symbol
#log2 transform data
eset.m[eset.m<1]<-1
eset.m<-log2(eset.m)
GeneMed<-apply(X = eset.m, MARGIN = 1, median)
GeneSum<-apply(X = eset.m, MARGIN = 1, sum)
eset.m<-eset.m[GeneMed>4,]
boxplot(eset.m[,1:45])
dim(eset.m)
index<- as.numeric(row.names(design))
GeneNames<-eset[,1]
subset<-eset[,-1]
subset2<-subset[,index, with=F]
eset.m<-data.matrix(subset2)
rownames(eset.m)<-GeneNames$gene_symbol
#log2 transform data
eset.m[eset.m<1]<-1
eset.m<-log2(eset.m)
GeneMed<-apply(X = eset.m, MARGIN = 1, median)
GeneSum<-apply(X = eset.m, MARGIN = 1, sum)
eset.m<-eset.m[GeneMed>1,]
boxplot(eset.m[,1:45])
dim(eset.m)
?removeBatchEffect
design = model.matrix(~factors[,factorI])
#design = model.matrix(~factors[,factorI])
eset.m<-CleanEsetLimma(design, eset, factors)
#get the weights for the choices of the samples
index<- as.numeric(row.names(design))
myDonorInfo<-readinDonor()
myW<-myDonorInfo$weight[match(as.numeric(gsub(paste("_", tissuename, sep=""), "", colnames(eset.m)) ),myDonorInfo$donor_id)]
fit = lmFit(eset.m, design = design, weights = myW)
fit.eBayes = eBayes(fit)
fit.treat = treat(fit.eBayes, lfc=log2(1.1))
eset.top = topTreat(fit.treat,coef=2,number = 1e10)
fit.eBayes = eBayes(fit)
fit.treat = treat(fit.eBayes, lfc=log2(1.1))
eset.top = topTreat(fit.treat,coef=2,number = 1e10)
fit.treat = treat(fit.eBayes, lfc=log2(1.1))
Warning()
warnings
warnings()
View(eset.m)
CleanEsetLimma<-function(design, eset, factors, removeBE=T){
#make sure dimensions match -> NA's are removed in creating the design
index<- as.numeric(row.names(design))
GeneNames<-eset[,1]
subset<-eset[,-1]
subset2<-subset[,index, with=F]
eset.m<-data.matrix(subset2)
rownames(eset.m)<-GeneNames$gene_symbol
#log2 transform data
eset.m[eset.m<1]<-1
eset.m<-log2(eset.m)
GeneMed<-apply(X = eset.m, MARGIN = 1, median)
GeneSum<-apply(X = eset.m, MARGIN = 1, sum)
eset.m<-eset.m[GeneMed>1,]
#if(removeBE==T) eset.m<-removeBatchEffect(eset.m, factors$SEX[index])
return(eset.m)
}
design = model.matrix(~factors[,factorI])
eset.m<-CleanEsetLimma(design, eset, factors)
index<- as.numeric(row.names(design))
myDonorInfo<-readinDonor()
myW<-myDonorInfo$weight[match(as.numeric(gsub(paste("_", tissuename, sep=""), "", colnames(eset.m)) ),myDonorInfo$donor_id)]
fit = lmFit(eset.m, design = design, weights = myW)
fit.eBayes = eBayes(fit)
fit.treat = treat(fit.eBayes, lfc=log2(1.1))
eset.top = topTreat(fit.treat,coef=2,number = 1e10)
View(eset.top)
names(factors)[factorI]
qqt(eset.top)
qqt(eset.top)
qqt(eset.top$t)
fit.treat$df.total
qqt(fit.eBayes$t[,2],df=fit.eBayes$df.residual+fit.eBayes$df.prior)
abline(0,1)
qqt(fit.treat$t[,2],df=fit.treat$df.residual+fit.treat$df.prior)
abline(0,1)
myval<-fit.treat$t[fit.treat$t!=0,2]
myval<-fit.treat$t[,2]
myval<-myval[myval!=0]
qqt(myval,df=fit.treat$df.residual+fit.treat$df.prior)
abline(0,1)
names(factors[factorI])
tissuename
rownames(fit.eBayes)
rownames(fit.treat)
volcanoplot(fit.treat, coef = 2, highlight = 10)
?volcanoplot
fit.eBayes$F
volcanoplot(fit.eBayes, coef = 2, highlight = 10, names = rownames(fit.eBayes))
View(eset.top)
?heatmap
3450-1896
setwd("~/Dropbox (Partners HealthCare)/CleaningProj/RxNorm Viz/")
library(data.table)
setwd("~/Desktop/CATS/GEO2R/GSE9566_Barres/")
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL6096 Scripts/CulturedAstroglia.R')
tT <- topTable(fit2, adjust="fdr", sort.by="B", number=10e10)
colnames(tT)
head(tT)
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL6096 Scripts/Astros.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL6096 Scripts/Neurons.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL6096 Scripts/Neurons.R')
gsms <- "11111111101010111111111010011100111100"
table(gsms==1)
setwd("~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/")
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astroglia.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astroglia.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astroglia.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astrocytes.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astrocytes.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astrocytes.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astrocytes.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astrocytes.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_OLs.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astrocytes.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_OLs.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_OLs.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astroglia.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astrocytes.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_OLs.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_OLs.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astrocytes.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astroglia.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astroglia.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Astrocytes.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_OLs.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APLP2.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APLP2.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APLP2.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APPsa.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APLP2gen1.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APPko.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APLP2.R')
gset <- getGEO("GSE25926", GSEMatrix =TRUE, AnnotGPL=TRUE,  destdir = "Data/")
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APLP2.R')
setwd("~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/")
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/GPL1261/Scripts/GSE9566_Neurons.R')
source('~/Desktop/CATS/GEO2R/GSE56772_BMS/Scripts/GSE56772_BMS_TG4510vsTTAalone.R')
setwd("~/Desktop/CATS/GEO2R/GSE56772_BMS/")
write.table(tT, file="Results/GSE56772_BMS_TG4510vsTTAalone.csv", row.names=F, sep=",")
source('~/Desktop/CATS/GEO2R/GSE56772_BMS/Scripts/GSE56772_BMS_TG4510vsTTAalone.R')
dim(tT)
setwd("..")
getwd()
setwd("GSE57583_BMS/")
source('~/Desktop/CATS/GEO2R/GSE57583_BMS/Scripts/GSE57583_Tg4510DN_CA1.R')
source('~/Desktop/CATS/GEO2R/GSE57583_BMS/Scripts/GSE57583_Tg4510vsTTAalone_CA1.R')
source('~/Desktop/CATS/GEO2R/GSE57583_BMS/Scripts/GSE57583_TTAaloneDN_CA1.R')
source('~/Desktop/CATS/GEO2R/GSE57583_BMS/Scripts/GSE57583_Tg4510DN_CA3.R')
source('~/Desktop/CATS/GEO2R/GSE57583_BMS/Scripts/GSE57583_Tg4510vsTTAalone_CA3.R')
source('~/Desktop/CATS/GEO2R/GSE57583_BMS/Scripts/GSE57583_TTAaloneDN_CA3.R')
source('~/Desktop/CATS/GEO2R/GSE57583_BMS/Scripts/GSE57583_TTAaloneDN_CA3.R')
setwd("..")
getwd()
setwd("GSE57528_BMS/")
setwd("~/Desktop/CATS/GEO2R/GSE31624_Pfizer/")
gset<-getGEO(GEO = "GSE65159", GSEMatrix = T, AnnotGPL = T)
gset
gset$GSE65159_series_matrix.txt.gz
View(exprs(gset$GSE65159_series_matrix.txt.gz))
gset<-getGEO(GEO = "GSE65159", GSEMatrix = T, AnnotGPL = T)
setwd("~/Desktop/CATS/GEO2R/GSE65159_TSAI/")
library(GEOquery)
gset<-getGEO(GEO = "GSE65159")
dir.create("Data")
gset<-getGEO(GEO = "GSE65159", destdir = "Data/")
gset
gset<-getGEO(filename = "Data/GSE65159_family.soft", AnnotGPL = T, GSEMatrix = T)
gset
typeof(gset)
Meta(gset)
exprs(gset)
exprs(gset)
getSlots(gset)
GSMList(gset)
colnames(GSMList(gset))
names(GSMList(gset))
gsms<-GSMList(gset)
gsms
gsms$GSM1588291
gset<-getGEO(GEO = "GSE65159", destdir = "Data/")
gsms
gset$GSE65159_series_matrix.txt.gz
download.file("https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE65159&format=file&file=GSE65159%5FrnaSeqCount%2Etxt%2Egz", destfile = "Data/rnaseq.txt")
gset = read.table("Data/rnaseq.txt")
View(gset)
ncol(gset)
colnames(gset)
grep(pattern = "CK_6wk*.$",colnames(gset))
grep(pattern = r"CK_6wk*.$", x = colnames(gset))
grep(pattern = "CK_6wk*.$", x = colnames(gset))
grep(pattern = "CK_6wk*.$", x = colnames(gset))
library(DESeq2)
gset.renamed = gset
colnames(gset.renamed)[CK_6wk]="CK_6wk"
CK_6wk = c(1,2,3)
CKp25_6wk = c(4,5,6)
CK_2wk = c(7,8,9)
CKp25_2k=c(10,11,12)
colnames(gset.renamed)[CK_6wk]="CK_6wk"
colnames(gset.renamed)[CK_6wk]
colnames(gset)[CK_6wk]="CK_6wk"
colnames(gset)[CKp25_6wk]="CKp25_6wk"
gset.selection<-gset[,c(CK_6wk,CKp25_6wk)]
factors<-as.factor(x=colnames(gset.selection))
dds<- DESeqDataSetFromMatrix(countData = gset.selection, colData = DataFrame(factors), ~factors)
dds <- dds[ rowSums(counts(dds)) > 20, ]
dds.deseq<-DESeq(dds)
dds<- DESeqDataSetFromMatrix(countData = gset.selection, colData = DataFrame(factors), ~factors)
View(dds)
dds
?DESeqDataSetFromMatrix
gset.selection<-gset[,c(CK_6wk,CKp25_6wk)]
View(gset.selection)
gset = read.table("Data/rnaseq.txt")
CK_6wk = c(1,2,3)
CKp25_6wk = c(4,5,6)
gset.selection<-gset[,c(CK_6wk,CKp25_6wk)]
?DESeqDataSetFromMatrix
DataFrame(colnames(gset.selection))
View(gset)
Levels = factor(c(0,0,0,1,1,1))
dds<- DESeqDataSetFromMatrix(countData = gset.selection, colData = DataFrame(colnames(gset.selection)),design = ~Levels)
DataFrame(colnames(gset.selection))
dds<- DESeqDataSetFromMatrix(countData = gset.selection, colData = DataFrame(colnames(gset.selection)),design = ~colnames(gset.selection)+0)
dds<- DESeqDataSetFromMatrix(countData = gset.selection, colData = DataFrame(colnames(gset.selection)),design = ~colnames(gset.selection))
colnames(gset.selection)
?design
?formula
formula(colnames(gset.selection))
~colnames(gset.selection)
~ factors(colnames(gset.selection))
?DESeqDataSetFromMatrix
condition <- factor(c( "Case","Case","Case","Control","Control", "Control"))
dds<- DESeqDataSetFromMatrix(countData = gset.selection,
colData = DataFrame(condition),
design = ~condition)
condition <- relevel(condition, ref = "Control")
condition
gset.selection<-gset[,c(CK_6wk, CKp25_6wk)]
condition <- factor(c("Control","Control", "Control","Case","Case","Case"))
dds<- DESeqDataSetFromMatrix(countData = gset.selection,
colData = DataFrame(condition),
design = ~condition)
condition <- relevel(condition, ref = "Control")
dds<- DESeqDataSetFromMatrix(countData = gset.selection,
colData = DataFrame(condition),
design = ~condition)
condition
dds <- dds[ rowSums(counts(dds)) > 20, ]
dds.deseq<-DESeq(dds)
dds.results<-results(dds.deseq)
View(dds.results)
dds.results[, -1]
View(dds.results[, -1])
View(dds.results[-4, -1])
View(dds.results[--4, -1])
View(dds.results[-nrows(dds.results)-4, -1])
nrows(dds.results)
dds.results[-c("no_feature","ambiguous","not_aligned","alignment_not_unique"),-1]
n<-dim(dds.results)[1]
dds.results[1:(n-4), -1]
View(dds.results[1:(n-4), -1])
colnames(gset)
gset = read.table("Data/rnaseq.txt")
CK_2wk = c(7,8,9)
CKp25_2k=c(10,11,12)
gset.selection<-gset[,c(CK_6wk, CKp25_6wk)]
gset.selection<-gset[,c(CK_2wk, CKp25_2wk)]
condition <- factor(c("Control","Control", "Control","Case","Case","Case"))
condition <- relevel(condition, ref = "Control")
dds<- DESeqDataSetFromMatrix(countData = gset.selection,
colData = DataFrame(condition),
design = ~condition)
dds <- dds[ rowSums(counts(dds)) > 20, ]
dds.deseq<-DESeq(dds)
dds.deseq<-DESeq(dds)
dds.results<-results(dds.deseq)
n<-dim(dds.results)[1]
write.csv(x = dds.results[1:(n-4), -1],file = "Results/GSE65159_CKp25vsCK_2wk.csv")
source('~/Desktop/CATS/GEO2R/GSE65159_TSAI/Scripts/GSE65159_CKp25vsCK_2wk.R')
CK_2wk = c(7,8,9)
CKp25_2k=c(10,11,12)
gset.selection<-gset[,c(CK_2wk, CKp25_2wk)]
source('~/Desktop/CATS/GEO2R/GSE65159_TSAI/Scripts/GSE65159_CKp25vsCK_2wk.R')
source('~/Desktop/CATS/GEO2R/GSE65159_TSAI/Scripts/GSE65159_CKp25vsCK_6wk.R')
gset = read.table("Data/rnaseq.txt")
colnames(gset)
source('~/Desktop/CATS/GEO2R/GSE65159_TSAI/Scripts/GSE65159_CKp25_6wkvsCKp25_2wk.R')
colnames(gset)
source('~/Desktop/CATS/GEO2R/GSE65159_TSAI/Scripts/GSE65159_CKp25vsCK_2wk.R')
source('~/Desktop/CATS/GEO2R/GSE65159_TSAI/Scripts/GSE65159_CKp25_6wkvsControl.R')
source('~/Desktop/CATS/GEO2R/GSE65159_TSAI/Scripts/GSE65159_CKp25_2wkvsControl.R')
source('~/Desktop/CATS/GEO2R/GSE65159_TSAI/Scripts/GSE65159_CKp25_6wkvsCKp25_2wk.R')
source('~/Desktop/CATS/GEO2R/GSE65159_TSAI/Scripts/GSE65159_CKp25_6wkvsControl.R')
gset = read.table("Data/rnaseq.txt")
Control = c(1,2,3,7,8,9)
CKp25_6wk = c(4,5,6)
gset.selection<-gset[,c(Control, CKp25_6wk)]
condition <- factor(c("Control","Control", "Control","Control",
"Control", "Control","Case","Case","Case"))
condition <- relevel(condition, ref = "Control")
dds<- DESeqDataSetFromMatrix(countData = gset.selection,
colData = DataFrame(condition),
design = ~condition)
dds <- dds[ rowSums(counts(dds)) > 20, ]
dim(dds)
dim(gset)[1]-dim(dds)[1]
dim(gset)[1]
CKp25_2wk = c(10,11,12)
CKp25_6wk = c(4,5,6)
gset = read.table("Data/rnaseq.txt")
gset.selection<-gset[,c(CKp25_2wk, CKp25_6wk)]
condition <- factor(c("Control","Control", "Control","Case","Case","Case"))
condition <- relevel(condition, ref = "Control")
dds<- DESeqDataSetFromMatrix(countData = gset.selection,
colData = DataFrame(condition),
design = ~condition)
dds <- dds[ rowSums(counts(dds)) > 20, ]
dim(gset)[1]-dim(dds)[1]
dim(gset)[1]
dim(dds)[1]
gset = read.table("Data/rnaseq.txt")
Control = c(1,2,3,7,8,9)
CKp25_2wk=c(10,11,12)
gset.selection<-gset[,c(Control, CKp25_2wk)]
condition <- factor(c("Control","Control", "Control","Control",
"Control", "Control","Case","Case","Case"))
condition <- relevel(condition, ref = "Control")
dds<- DESeqDataSetFromMatrix(countData = gset.selection,
colData = DataFrame(condition),
design = ~condition)
dds <- dds[ rowSums(counts(dds)) > 20, ]
dim(dds)[1]
dim(gset)[1]-dim(dds)[1]
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/Scripts/GSE9566_Astrocytes.R')
setwd("~/Desktop/CATS/GEO2R/")
setwd("GSE9566_Barres/")
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/Scripts/GSE9566_Astrocytes.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/Scripts/GSE9566_Neurons.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/Scripts/GSE9566_Astroglia.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/Scripts/GSE9566_OLs.R')
source('~/Desktop/CATS/GEO2R/GSE9566_Barres/Scripts/GSE9566_Astrocytes.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APPko.R')
getwd()
setwd("../GSE25926_Muller/")
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APPko.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APPsa.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APLP2.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APPko.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APPsa.R')
setwd("~/Desktop/CATS/GEO2R/GSE25926_Muller/")
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APPko.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APLP2gen1.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APLP2gen1.R')
source('~/Desktop/CATS/GEO2R/GSE25926_Muller/Scripts/GSE25926_APLP2gen1.R')
source('~/.active-rstudio-document', echo=TRUE)
gset <- getGEO("GSE25926", GSEMatrix =TRUE, AnnotGPL=TRUE)
library(Biobase)
library(GEOquery)
gset <- getGEO("GSE25926", GSEMatrix =TRUE, AnnotGPL=TRUE)
gset <- getGEO("GSE25926", GSEMatrix =TRUE, AnnotGPL=TRUE)
gset <- getGEO("GSE25926", GSEMatrix =TRUE, AnnotGPL=TRUE)
gset <- getGEO("GSE25926", GSEMatrix =TRUE, AnnotGPL=TRUE)
gset <- getGEO("GSE25926", GSEMatrix =TRUE, AnnotGPL=TRUE)
library(Biobase)
library(GEOquery)
gset <- getGEO("GSE25926", GSEMatrix =TRUE, AnnotGPL=TRUE)
if (length(gset) > 1) idx <- grep("GPL1261", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
fvarLabels(gset) <- make.names(fvarLabels(gset))
fvarLabels(gset)
gsms <- "000XXX111XXXXXX"
sml <- c()
for (i in 1:nchar(gsms)) { sml[i] <- substr(gsms,i,i) }
# eliminate samples marked as "X"
sel <- which(sml != "X")
sml <- sml[sel]
gset <- gset[ ,sel]
gset
View(exprs(gset))
vals<-exprs(gset)
nrows(exprs(gset))
dim(exprs(gset))
dim(exprs(gset))[1]
vals["Description"]=rep(NA, dim(exprs(gset))[1])
?rep
vals["Description"]=rep(NA, times = dim(exprs(gset))[1])
rep(NA, times = dim(exprs(gset))[1])
dim(gset)
dim(vals)
vals = exprs(gset)
dim(vals)
vals["Description"]=rep(NA, times = dim(exprs(gset))[1])
vals[,"Description"]=rep(NA, times = dim(exprs(gset))[1])
vals$Description=NA
vals
vals = exprs(gset)
vals$Description=NA
vals$Description=rep.int(NA, times = dim(vals)[1])
vals$Description=rep.int(x = NA, times = dim(vals)[1])
dim(vals)[1]
vals = exprs(gset)
vals$Description=rep.int(x = NA, times = dim(vals)[1])
Description=rep.int(x = NA, times = dim(vals)[1])
vals = exprs(gset)
vals
vals$Description = na
vals$Description = 'na'
exprs(gset)
rep(NA)
rep(NA, 10)
rep(NA, dim(vals)[1])
rownum = dim(vals)[1]
rownum
dim(vals)
vals = exprs(gset)
rownum = dim(vals)[1]
rownum
rep(NA,rownum)
vals$Description = rep(NA,rownum)
vals = exprs(gset)
rownum = dim(vals)[1]
vals$Description = as.vector(rep(NA,rownum))
vals = exprs(gset)
rownum = dim(vals)[1]
vals['Description'] = as.vector(rep(NA,rownum))
length(vals[,1])
vals = exprs(gset)
length(vals[,1])
dim(vals)[0]
dim(vals)[1]
vals = exprs(gset)
dim(vals)
dim(vals)[2]
vals = exprs(gset)
vals[,dim(vals)[2]] = as.vector(rep(NA,dim(vals)[1]))
vals
vals = data.frame(exprs(gset))
vals
vals[,'Description'] = as.vector(rep(NA,dim(vals)[1]))
vals
1:dim(vals)[2]-1
dim(vals)[2]
vals[,c('Description', 1:dim(vals)[2]-1)]
vals[,c(dim(vals)[2], 1:dim(vals)[2]-1)]
getwd()
dir.create("GSEA")
MakeGSEA = function(gset, name){
vals = data.frame(exprs(gset))
vals[,'Description'] = as.vector(rep(NA,dim(vals)[1]))
write.table( x = vals[,c(dim(vals)[2], 1:dim(vals)[2]-1)],
file = paste("GSEA/",name), row.names = T, sep = "\t")
}
source("~/Desktop/CATS/GEO2R/GSEA/expresionfile.R")
setwd("~/Desktop/CATS/GEO2R/DatasetCollection/GSE25926_Muller/")
